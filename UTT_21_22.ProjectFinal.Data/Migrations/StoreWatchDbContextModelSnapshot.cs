// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UTT_21_22.ProjectFinal.Data.Configurations;

namespace UTT_21_22.ProjectFinal.Data.Migrations
{
    [DbContext(typeof(StoreWatchDbContext))]
    partial class StoreWatchDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("TimeExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AccountId");

                    b.HasIndex("CategoryAccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Admin", b =>
                {
                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PostId")
                        .HasColumnType("varchar");

                    b.Property<int>("RuleId")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.HasIndex("RuleId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryAccount", b =>
                {
                    b.Property<int>("CategoryAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryAccountName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryAccountId");

                    b.ToTable("CategoryAccount");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryPost", b =>
                {
                    b.Property<int>("CategoryPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryPostName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryPostId");

                    b.ToTable("CategoryPost");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryStore", b =>
                {
                    b.Property<int>("CategoryStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryStoreName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CategoryStoreId");

                    b.ToTable("CategoryStore");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryWatch", b =>
                {
                    b.Property<int>("CategoryWatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryWatchName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CategoryWatchId");

                    b.ToTable("CategoryWatch");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ColorId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("HomeTown")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("AccountId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Post", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("varchar");

                    b.Property<int?>("CategoryPostId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReviewId")
                        .HasColumnType("varchar");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimePost")
                        .HasColumnType("datetime2");

                    b.HasKey("PostId");

                    b.HasIndex("CategoryPostId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Review", b =>
                {
                    b.Property<string>("ReviewId")
                        .HasColumnType("varchar");

                    b.Property<decimal>("PointRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReviewContent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimePost")
                        .HasColumnType("datetime2");

                    b.HasKey("ReviewId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RuleId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.HasIndex("RuleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Rule", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RuleId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Store", b =>
                {
                    b.Property<string>("StoreId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CategoryShopId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryStoreId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("GetStatus")
                        .HasColumnType("int");

                    b.Property<string>("HotLine")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ReviewId")
                        .HasColumnType("varchar");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StoreId");

                    b.HasIndex("CategoryShopId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.StoreWatch", b =>
                {
                    b.Property<string>("StoreId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("WatchId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("StoreId", "WatchId");

                    b.HasIndex("WatchId");

                    b.ToTable("StoreWatches");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Watch", b =>
                {
                    b.Property<string>("WatchId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("BusinessStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryWatchId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DetailInformation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Insurance")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ReviewId")
                        .HasColumnType("varchar");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeManufacture")
                        .HasColumnType("datetime2");

                    b.Property<string>("WatchName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("WatchId");

                    b.HasIndex("CategoryWatchId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Watches");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Account", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.CategoryAccount", "CategoryAccount")
                        .WithMany("Accounts")
                        .HasForeignKey("CategoryAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryAccount");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Admin", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Account", "Account")
                        .WithMany("Admins")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Post", "Post")
                        .WithMany("Admins")
                        .HasForeignKey("PostId");

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Rule", "Rule")
                        .WithMany("Admins")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Post");

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Customer", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Account", "Account")
                        .WithMany("Customers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Post", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.CategoryPost", "CategoryPost")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryPostId");

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Review", "Review")
                        .WithMany("Posts")
                        .HasForeignKey("ReviewId");

                    b.Navigation("CategoryPost");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Role", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Rule", "Rule")
                        .WithMany("Roles")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Store", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.CategoryStore", "CategoryStore")
                        .WithMany("Stores")
                        .HasForeignKey("CategoryShopId");

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Review", "Review")
                        .WithMany("Stores")
                        .HasForeignKey("ReviewId");

                    b.Navigation("CategoryStore");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.StoreWatch", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Store", "Store")
                        .WithMany("StoreWatches")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Watch", "Watch")
                        .WithMany("StoreWatches")
                        .HasForeignKey("WatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("Watch");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Watch", b =>
                {
                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.CategoryWatch", "CategoryWatch")
                        .WithMany("Watches")
                        .HasForeignKey("CategoryWatchId");

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Color", "Color")
                        .WithMany("Watches")
                        .HasForeignKey("ColorId");

                    b.HasOne("UTT_21_22.ProjectFinal.Data.Databases.Review", "Review")
                        .WithMany("Watches")
                        .HasForeignKey("ReviewId");

                    b.Navigation("CategoryWatch");

                    b.Navigation("Color");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Account", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryAccount", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryPost", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryStore", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.CategoryWatch", b =>
                {
                    b.Navigation("Watches");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Color", b =>
                {
                    b.Navigation("Watches");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Post", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Review", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Stores");

                    b.Navigation("Watches");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Rule", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Store", b =>
                {
                    b.Navigation("StoreWatches");
                });

            modelBuilder.Entity("UTT_21_22.ProjectFinal.Data.Databases.Watch", b =>
                {
                    b.Navigation("StoreWatches");
                });
#pragma warning restore 612, 618
        }
    }
}
